<?php
/**
 * COmanage Registry CO Person Fields
 *
 * Copyright (C) 2010-15 University Corporation for Advanced Internet Development, Inc.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 *
 * @copyright     Copyright (C) 2010-15 University Corporation for Advanced Internet Development, Inc.
 * @link          http://www.internet2.edu/comanage COmanage Project
 * @package       registry
 * @since         COmanage Registry v0.1
 * @license       Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)
 * @version       $Id$
 */

  // Globals
  global $cm_lang, $cm_texts;

  // Determine if fields are editable -- this isn't quite the right description for this view
  $e = false;
  $es = false;

  if(($this->action == "invite" && $permissions['invite'])
      || ($this->action == "canvas" && $permissions['canvas']))
    $e = true;

  if($this->action == "canvas" && $permissions['editself'])
    $es = true;

  // We shouldn't get here if we don't have at least read permission, but check just in case
  
  if(!$e && !$permissions['view'])
    return(false);

  // Add breadcrumbs
  print $this->element("coCrumb");
  $args = array();
  $args['plugin'] = null;
  $args['controller'] = 'co_people';
  $args['action'] = 'index';
  $args['co'] = $cur_co['Co']['id'];
  $this->Html->addCrumb(_txt('me.population'), $args);
  if($this->action == "canvas") {
    $this->Html->addCrumb(filter_var(generateCn($co_people[0]['PrimaryName']),FILTER_SANITIZE_SPECIAL_CHARS));
  } elseif($this->action == "invite") {
    $args = array(
      'controller' => 'org_identities',
      'action' => 'edit',
      $co_people[0]['CoOrgIdentityLink'][0]['org_identity_id']
    );
    
    $this->Html->addCrumb(generateCn($co_people[0]['PrimaryName']), $args);
    $this->Html->addCrumb(_txt('op.inv'));
  } else {
    $args = array(
      'controller' => 'co_people',
      'action' => 'canvas',
      $co_people[0]['CoPerson']['id']
    );
    
    $this->Html->addCrumb(generateCn($co_people[0]['PrimaryName']), $args);
  }
  
  // Add buttons to sidebar
  $sidebarButtons = $this->get('sidebarButtons');
  
  if($e)
  {
    // Add related links to the sidebar
    
    if($this->action != "add" && $this->action != "invite") {
      // View History button
      if($permissions['history']) {
        $sidebarButtons[] = array(
          'icon'    => 'note',
          'title'   => _txt('op.history'),
          'url'     => array(
            'controller' => 'history_records',
            'action' => 'index',
            'copersonid' => $co_people[0]['CoPerson']['id']
          )
        );
      }
      
      // Resend invitation button
      // This is based on index.ctp
      if($permissions['invite']
         && ($co_people[0]['CoPerson']['status'] == StatusEnum::Pending
             || $co_people[0]['CoPerson']['status'] == StatusEnum::Invited)) {
        $sidebarButtons[] = array(
          'icon'    => 'mail-closed',
          'title'   => _txt('op.inv.resend'),
          'url'     => 'javascript:js_confirm_generic(\''
            . _txt('js.reinvite') . '\',\''    // dialog body text
            . $this->Html->url(              // dialog confirm URL
              array(
                'controller' => 'co_invites',
                'action'     => 'send',
                'copersonid' => $co_people[0]['CoPerson']['id']
              )
            ) . '\',\''
            . _txt('op.inv.resend') . '\',\''    // dialog confirm button
            . _txt('op.cancel') . '\',\''    // dialog cancel button
            . _txt('op.inv.resend') . '\',[\''   // dialog title
            . filter_var(_jtxt(generateCn($co_people[0]['PrimaryName'])),FILTER_SANITIZE_STRING)  // dialog body text replacement strings
            . '\'])'
        );
      } elseif($permissions['enroll']
               && $co_people[0]['CoPerson']['status'] == StatusEnum::PendingConfirmation) {
        if(!empty($co_people[0]['CoInvite']['CoPetition']['id'])) {
          $sidebarButtons[] = array(
          'icon'    => 'mail-closed',
          'title'   => _txt('op.inv.resend'),
          'url'     => 'javascript:js_confirm_generic(\''
            . _txt('js.reinvite') . '\',\''    // dialog body text
            . $this->Html->url(              // dialog confirm URL
              array(
                'controller' => 'co_petitions',
                'action'     => 'resend',
                $co_people[0]['CoInvite']['CoPetition']['id']
              )
            ) . '\',\''
            . _txt('op.inv.resend') . '\',\''    // dialog confirm button
            . _txt('op.cancel') . '\',\''    // dialog cancel button
            . _txt('op.inv.resend') . '\',[\''   // dialog title
            . filter_var(_jtxt(generateCn($co_people[0]['PrimaryName'])),FILTER_SANITIZE_STRING)  // dialog body text replacement strings
            . '\'])'
          );
        }
      }
      
      if($vv_enable_nsf_demo) {
        // Adjust the link to the NSF Demographics Controller according to whether or
        // not data has been set.
        
        $l = array();
        $l['controller'] = 'co_nsf_demographics';
        
        if(empty($co_people[0]['CoNsfDemographic']['id'])) {
          $l['action'] = 'add';
          $l['copersonid'] = $co_people[0]['CoPerson']['id'];
        } else {
          $l['action'] = 'edit';
          $l[] = $co_people[0]['CoNsfDemographic']['id'];
        }
        
        $l['co'] = $co_people[0]['CoPerson']['co_id'];
        
        // NSF Demographics
        $sidebarButtons[] = array(
          'icon'    => 'image',
          'title'   => _txt('ct.co_nsf_demographics.1'),
          'url'     => $l
        );
      }
      
      // Provisioning status
      if($permissions['provision']) {
        $sidebarButtons[] = array(
          'icon'    => 'gear',
          'title'   => _txt('op.prov.view'),
          'url'     => array(
            'controller' => 'co_people', 
            'action'     => 'provision', 
            $co_people[0]['CoPerson']['id']
          )
        ); 
      }
      
      // Terms and Conditions
      if(!empty($vv_co_tandc_count) && $vv_co_tandc_count > 0) {
        $sidebarButtons[] = array(
          'icon'    => 'tag',
          'title'   => _txt('op.tc.review'),
          'url'     => array(
            'controller' => 'co_terms_and_conditions', 
            'action'     => 'review', 
            'copersonid' => $co_people[0]['CoPerson']['id']
          )
        );
      }
      
      // View Petitions
      if($permissions['petitions']) {
        $sidebarButtons[] = array(
          'icon'    => 'script',
          'title'   => _txt('ct.co_petitions.pl'),
          'url'     => array(
            'controller' => 'co_petitions',
            'action' => 'index',
            // Since this is an index view, we still need the CO ID. paginationConditions
            // will restrict searching to eligible enrollments.
            'co' => $co_people[0]['CoPerson']['co_id'],
            'sort' => 'modified',
            'search.copersonid' => $co_people[0]['CoPerson']['id']
          )
        );
      }
      
      // Autogenerate Identifiers button
      if($permissions['assign'] && !empty($co_identifier_assignments)) {
        $sidebarButtons[] = array(
            'icon'    => 'contact',
            'title'   => _txt('op.id.auto'),
            'url'     => 'javascript:js_confirm_autogenerate();' // Does not work when added in options
        );
      }
      
      if($permissions['delete'] && empty($co_people[0]['CoPersonRole'])) {
        $sidebarButtons[] = array(
          'icon'    => 'circle-close',
          'title'   => _txt('op.delete'),
          'url'     => 'javascript:js_confirm_generic(\''
            . _txt('js.remove') . '\',\''    // dialog body text
            . $this->Html->url(              // dialog confirm URL
              array(
                'controller' => 'co_people',
                'action'     => 'delete',
                $co_people[0]['CoPerson']['id']
              )
            ) . '\',\''
            . _txt('op.remove') . '\',\''    // dialog confirm button
            . _txt('op.cancel') . '\',\''    // dialog cancel button
            . _txt('op.remove') . '\',[\''   // dialog title
            . filter_var(_jtxt(generateCn($co_people[0]['PrimaryName'])),FILTER_SANITIZE_STRING)  // dialog body text replacement strings
            . '\'])'
        );
      }
      
      if($permissions['expunge']) {
        $sidebarButtons[] = array(
          'icon'    => 'circle-close',
          'title'   => _txt('op.expunge'),
          'url'     => array(
            'controller' => 'co_people', 
            'action'     => 'expunge', 
            $co_people[0]['CoPerson']['id']
          )
        );
      }
    }
    
    // Populate the cross reference
    print $this->Form->hidden('CoPerson.co_id', array('default' => $cur_co['Co']['id'])). "\n";
    if(!$this->action != "canvas") {
      print $this->Form->hidden('CoOrgIdentityLink.0.id'). "\n";
      if(!empty($co_people[0]['CoOrgIdentityLink'][0]['org_identity_id'])) {
        print $this->Form->hidden('CoOrgIdentityLink.0.org_identity_id', array('default' => $co_people[0]['CoOrgIdentityLink'][0]['org_identity_id'])). "\n";
      }
      // Default status is 'Pending'
      print $this->Form->hidden('status', array('default' => 'P')). "\n";
    }
  }
  
  // Set buttons for rendering in sidebar  
  $this->set('sidebarButtons', $sidebarButtons);

  // Line number, for rendering
  $l = 1;
?>

<script type="text/javascript">
  <!-- /* JS specific to these fields */ -->
  
  function js_confirm_autogenerate() {
    // Open the dialog to confirm autogeneration of identifiers
    var $tabs = $( "#tabs" ).tabs();
    $('#autogenerate-dialog').dialog('open');
  }

  $(function() {
    // Explorer menu toggles
    $(".fieldGroupName").click(function(event) {
      event.preventDefault();
      $(this).next(".fields").slideToggle("fast");
      // toggle the +/- icon:
      if ($(this).find(".ui-icon").hasClass("ui-icon-circlesmall-minus")) {
        $(this).find(".ui-icon").removeClass("ui-icon-circlesmall-minus").addClass("ui-icon-circlesmall-plus");
      } else {
        $(this).find(".ui-icon").removeClass("ui-icon-circlesmall-plus").addClass("ui-icon-circlesmall-minus");
      }
    });

    // Autogenerate dialog
    $("#autogenerate-dialog").dialog({
      autoOpen: false,
      <?php if($this->action == 'canvas'): ?>
      buttons: {
        "<?php print _txt('op.cancel'); ?>": function() {
          $(this).dialog("close");
        },
        "<?php print _txt('op.id.auto'); ?>": function() {
          window.location="<?php print $this->Html->url(array('controller' => 'identifiers',
                                                              'action' => 'assign',
                                                              'copersonid' => $co_people[0]['CoPerson']['id'],
                                                              'co' => $cur_co['Co']['id'])); ?>"
        }
      },
      modal: true,
      show: {
        effect: "fade"
      },
      hide: {
        effect: "fade"
      }
      <?php endif; // canvas ?>
    });
  });
</script>

<div id="<?php print $this->action; ?>_co_person" class="explorerContainer">
  <div id="coPersonExplorer" class="personExplorer">
    <ul>
      <li id="fields-name" class="fieldGroup">
        <?php if($this->action != 'invite' && $this->Permission->selfService($permissions, $e, 'Name') == PermissionEnum::ReadWrite): ?>
          <div class="coAddEditButtons">
            <?php
            $linktarget = array(
              'controller' => 'names',
              'action'     => 'add',
              'copersonid' => $co_people[0]['CoPerson']['id'],
              'co'         => $cur_co['Co']['id']
            );
            $linkparams = array(
              'class'  => 'addbutton',
              //'escape' => false
            );

            //print $this->Html->link('<span class="ui-button-icon-primary ui-icon ui-icon-circle-plus"></span>' . _txt('op.add'),
            print $this->Html->link(_txt('op.add'),
              $linktarget,
              $linkparams);
            ?>
          </div>
        <?php endif; // invite+permission ?>

        <a href="#tabs-name" class="fieldGroupName">
            <span class="ui-icon ui-icon-circlesmall-minus"></span>
          <?php print _txt('fd.name'); ?>
        </a>

        <ul class="fields">
          <li>
            <div id="tabs-name" class="additionalinfo">
            <table>
            <?php if($this->action == 'invite'): ?>
              <tr class="line<?php print ($l % 2); $l++; ?>">
                <th>
                  <?php
                  print _txt('fd.name.honorific');

                  if($e)
                    print " " . _txt('fd.name.h.desc');
                  ?>
                </th>
                <td>
                  <?php
                  print $this->Form->hidden('PrimaryName.id');
                  print $this->Form->hidden('PrimaryName.type', array('default' => NameEnum::Official));
                  print $this->Form->hidden('PrimaryName.primary_name', array('default' => true));
                  print ($e ? $this->Form->input('PrimaryName.honorific',
                    array('default' => $co_people[0]['PrimaryName']['honorific']))
                    : filter_var($co_people[0]['PrimaryName']['honorific'],FILTER_SANITIZE_SPECIAL_CHARS));
                  ?>
                </td>
              </tr>
              <tr class="line<?php print ($l % 2); $l++; ?>">
                <th>
                  <?php print _txt('fd.name.given'); ?><span class="required">*</span>
                </th>
                <td>
                  <?php print ($e ? $this->Form->input('PrimaryName.given',
                    array('default' => $co_people[0]['PrimaryName']['given']))
                    : filter_var($co_people[0]['PrimaryName']['given'],FILTER_SANITIZE_SPECIAL_CHARS)); ?>
                </td>
              </tr>
              <tr class="line<?php print ($l % 2); $l++; ?>">
                <th>
                  <?php print _txt('fd.name.middle'); ?>
                </th>
                <td>
                  <?php print ($e ? $this->Form->input('PrimaryName.middle',
                    array('default' => $co_people[0]['PrimaryName']['middle']))
                    : filter_var($co_people[0]['PrimaryName']['middle'],FILTER_SANITIZE_SPECIAL_CHARS)); ?>
                </td>
              </tr>
              <tr class="line<?php print ($l % 2); $l++; ?>">
                <th>
                  <?php print _txt('fd.name.family'); ?>
                </th>
                <td>
                  <?php print ($e ? $this->Form->input('PrimaryName.family',
                    array('default' => $co_people[0]['PrimaryName']['family']))
                    : filter_var($co_people[0]['PrimaryName']['family'],FILTER_SANITIZE_SPECIAL_CHARS)); ?>
                </td>
              </tr>
              <tr class="line<?php print ($l % 2); $l++; ?>">
                <th>
                  <?php
                  print _txt('fd.name.suffix');
                  if($e)
                    print " " . _txt('fd.name.s.desc');
                  ?>
                </th>
                <td>
                  <?php print ($e ? $this->Form->input('PrimaryName.suffix',
                    array('default' => $co_people[0]['PrimaryName']['suffix']))
                    : filter_var($co_people[0]['PrimaryName']['suffix'],FILTER_SANITIZE_SPECIAL_CHARS)); ?>
                </td>
              </tr>
              <tr class="line<?php print ($l % 2); $l++; ?>">
                <th>
                  <?php print _txt('fd.type'); ?>
                </th>
                <td>
                  <?php // CO-955 nametype official needs to exist, but probably should be configurable ?>
                  <?php print _txt('en.name.type', null, NameEnum::Official); ?>
                </td>
              </tr>
              <tr class="line<?php print ($l % 2); $l++; ?>">
                <th>
                  <?php print _txt('fd.language'); ?>
                </th>
                <td>
                  <?php
                  global $cm_lang, $cm_texts;

                  $attrs = array();
                  $attrs['value'] = (isset($co_people[0]['PrimaryName']['language'])
                    ? $co_people[0]['PrimaryName']['language']
                    : getPreferredLanguage());
                  $attrs['empty'] = true;

                  if($e) {
                    print $this->Form->select('PrimaryName.language',
                      $cm_texts[ $cm_lang ]['en.language'],
                      $attrs);

                    if($this->Form->isFieldError('PrimaryName.language')) {
                      print $this->Form->error('PrimaryName.language');
                    }
                  } else {
                    if(!empty($co_people[0]['PrimaryName']['language'])) {
                      print _txt('en.language', null, $co_people[0]['PrimaryName']['language']);
                    }
                  }
                  ?>
                </td>
              </tr>
              <tr>
                <th>
                  <em><span class="required"><?php print _txt('fd.req'); ?></span></em><br />
                </th>
                <td>
                  <?php
                  if($e) {
                    print $this->Form->submit($submit_label);
                    print $this->Form->button(_txt('op.reset'),
                      array('type'=>'reset'));
                  }
                  ?>
                </td>
              </tr>
            <?php elseif($this->action == "compare"): ?>
              <!-- Simply list the org names and then the CO names -->
              <tr>
                <th class="ui-widget-header"><?php print filter_var($cur_co['Co']['name'],FILTER_SANITIZE_SPECIAL_CHARS); ?></th>
              </tr>
              <?php foreach($co_people[0]['Name'] as $n): ?>
                <tr>
                  <td>
                    <?php
                    print filter_var(generateCn($n),FILTER_SANITIZE_SPECIAL_CHARS)
                      . " ("
                      . ($n['primary_name'] ? (_txt('fd.name.primary_name') . ", ") : "")
                      . filter_var($vv_cop_name_types[ $n['type'] ],FILTER_SANITIZE_SPECIAL_CHARS)
                      . (!empty($n['language']) ? (", " . _txt('en.language', null, $n['language'])) : "")
                      . ")";
                    ?>
                  </td>
                </tr>
              <?php endforeach; ?>
              <tr>
                <th class="ui-widget-header"><?php print (!empty($org_identities[0]['OrgIdentity']['o']) ? filter_var($org_identities[0]['OrgIdentity']['o'],FILTER_SANITIZE_SPECIAL_CHARS) : _txt('fd.o')); ?></th>
              </tr>
              <?php foreach($org_identities[0]['Name'] as $n): ?>
                <tr>
                  <td>
                    <?php
                    print filter_var(generateCn($n),FILTER_SANITIZE_SPECIAL_CHARS)
                      . " ("
                      . ($n['primary_name'] ? (_txt('fd.name.primary_name') . ", ") : "")
                      . filter_var($vv_cop_name_types[ $n['type'] ],FILTER_SANITIZE_SPECIAL_CHARS)
                      . (!empty($n['language']) ? (", " . _txt('en.language', null, $n['language'])) : "")
                      . ")";
                    ?>
                  </td>
                </tr>
              <?php endforeach; ?>
            <?php else: // invite/compare ?>
              <?php foreach($co_people[0]['Name'] as $n): ?>
                <div>
                  <div>
                    <?php
                    $perm = $this->Permission->selfService($permissions,
                                                           $e,
                                                           'Name',
                                                           (!empty($n['type']) ? $n['type'] : null));
                    
                    if($perm == PermissionEnum::ReadWrite) {
                      print $this->Html->link(generateCn($n),
                        array('controller' => 'names',
                          'action' => 'edit',
                          $n['id'],
                          'co' => $cur_co['Co']['id']));
                    } elseif($perm == PermissionEnum::ReadOnly) {
                      print filter_var(generateCn($n),FILTER_SANITIZE_SPECIAL_CHARS);
                    }

                    print "&nbsp;("
                      . ($n['primary_name'] ? (_txt('fd.name.primary_name') . ", ") : "")
                      . filter_var($vv_cop_name_types[ $n['type'] ],FILTER_SANITIZE_SPECIAL_CHARS)
                      . (!empty($n['language']) ? (", " . _txt('en.language', null, $n['language'])) : "")
                      . ")";
                    ?>
                  </div>
                  <div>
                    <?php
                    if($perm == PermissionEnum::ReadWrite) {
                      if(!$n['primary_name']) {
                        print '<a class="deletebutton" title="' . _txt('op.delete')
                          . '" onclick="javascript:js_confirm_generic(\''
                          . _txt('js.remove') . '\',\''    // dialog body text
                          . $this->Html->url(              // dialog confirm URL
                            array(
                              'controller' => 'names',
                              'action' => 'delete', $n['id'],
                              'co' => $cur_co['Co']['id']
                            )
                          ) . '\',\''
                          . _txt('op.remove') . '\',\''    // dialog confirm button
                          . _txt('op.cancel') . '\',\''    // dialog cancel button
                          . _txt('op.remove') . '\',[\''   // dialog title
                          . filter_var(_jtxt(generateCn($n)),FILTER_SANITIZE_STRING)  // dialog body text replacement strings
                          . '\']);">'
                          . _txt('op.delete')
                          . '</a>';

                        print $this->Html->link(_txt('op.primary'),
                            array('controller' => 'names',
                              'action'     => 'primary',
                              $n['id'],
                              'copersonid' => $co_people[0]['CoPerson']['id']),
                            array('class' => 'primarybutton')) . "\n";
                      }

                      print $this->Html->link(_txt('op.edit'),
                          array('controller' => 'names',
                            'action' => 'edit',
                            $n['id'],
                            'co' => $cur_co['Co']['id']),
                          array('class' => 'editbutton')) . "\n";
                    }
                    ?>
                  </div>
                </div>
              <?php endforeach; ?>
            <?php endif; // invite ?>
            </table>
            </div> <!-- tabs-name -->
          </li>
        </ul>
      </li>
      <?php if($this->action != "invite"): ?>
        <li id="fields-id" class="fieldGroup">
          <?php
            if($e && !$es) {
              print '<div class="coAddEditButtons">';
              $linktarget = array(
                'controller' => 'identifiers',
                'action'     => 'add',
                'copersonid' => $co_people[0]['CoPerson']['id'],
                'co'         => $cur_co['Co']['id']
              );
              $linkparams = array('class'  => 'addbutton');
              print $this->Html->link(_txt('op.add'),
                $linktarget,
                $linkparams);
              print '</div>';
            }
          ?>
          <a href="#tabs-id" class="fieldGroupName">
            <span class="ui-icon ui-icon-circlesmall-minus"></span>
            <?php print _txt('fd.ids'); ?>
          </a>
          <ul class="fields">
            <li>
              <div id="tabs-id" >
                <?php print '<div';
                if($this->action != 'compare')
                  print ' class="additionalinfo"';
                print '>';
                ?>
                <table>
                  <tbody>
                  <?php if($this->action == "compare"): ?>
                    <tr>
                      <th class="ui-widget-header"><?php print filter_var($cur_co['Co']['name'],FILTER_SANITIZE_SPECIAL_CHARS); ?></th>
                      <?php if($e && !$es): ?>
                        <th class="ui-widget-header"><?php print _txt('fd.actions'); ?></th>
                      <?php endif; ?>
                    </tr>
                  <?php endif; ?>

                  <?php
                  $l = 1;
                  if($e && !$es)
                  {
                    if(isset($co_people[0]['Identifier']))
                    {
                      foreach($co_people[0]['Identifier'] as $id)
                      {
                        print '<div>';
                        print '<div>';
                        print $this->Html->link($id['identifier'], array('controller' => 'identifiers', 'action' => 'edit', $id['id'], 'co' => $cur_co['Co']['id']));
                        print " &#160;(" . filter_var($vv_cop_identifier_types[ $id['type'] ],FILTER_SANITIZE_SPECIAL_CHARS) . ")";
                        print '</div>';
                        print '<div>';
                        // XXX we already checked for $permissions['edit'], but not ['delete']... should we?
                        print '<a class="deletebutton" title="' . _txt('op.delete')
                          . '" onclick="javascript:js_confirm_generic(\''
                          . _txt('js.remove') . '\',\''    // dialog body text
                          . $this->Html->url(              // dialog confirm URL
                            array(
                              'controller' => 'identifiers',
                              'action' => 'delete', $id['id'],
                              'co' => $cur_co['Co']['id']
                            )
                          ) . '\',\''
                          . _txt('op.remove') . '\',\''    // dialog confirm button
                          . _txt('op.cancel') . '\',\''    // dialog cancel button
                          . _txt('op.remove') . '\',[\''   // dialog title
                          . filter_var(_jtxt($id['identifier']),FILTER_SANITIZE_STRING)  // dialog body text replacement strings
                          . '\']);">'
                          . _txt('op.delete')
                          . '</a>';
                        print $this->Html->link(_txt('op.edit'),
                          array('controller' => 'identifiers', 'action' => 'edit', $id['id'], 'co' => $cur_co['Co']['id']),
                          array('class' => 'editbutton'));
                        print '</div>';
                        print '</div>';
                      }
                    }
                  }
                  else
                  {
                    if(isset($co_people[0]['Identifier']))
                    {
                      foreach($co_people[0]['Identifier'] as $id)
                      {

                        print '<tr class="line';
                        print ($l % 2);
                        print '">';
                        $l++;
                        print '<td>';
                        print filter_var($id['identifier'],FILTER_SANITIZE_SPECIAL_CHARS) . " (" . $id['type'] . ")<br />\n";
                        print '</td>';
                        print '</tr>';
                      }
                    }
                  }
                  ?>
                  </tbody>
                </table>
              </div>
              <?php if($this->action == "compare"): ?>
                <div>
                  <table>
                    <tbody>
                    <tr>
                      <th class="ui-widget-header"><?php print (!empty($org_identities[0]['OrgIdentity']['o']) ? filter_var($org_identities[0]['OrgIdentity']['o'],FILTER_SANITIZE_SPECIAL_CHARS) : _txt('fd.o')); ?></th>
                    </tr>
                    <?php
                    if(isset($org_identities[0]['Identifier']))
                    {
                      foreach($org_identities[0]['Identifier'] as $id)
                      {
                        print '<tr class="line';
                        print ($l % 2);
                        print '">';
                        $l++;
                        print '<td>';
                        print filter_var($id['identifier'],FILTER_SANITIZE_SPECIAL_CHARS) . " (" . $id['type'] . ")<br />\n";
                        print '</td>';
                        print '</tr>';
                      }
                    }
                    ?>
                    </tbody>
                  </table>
                </div>
              <?php endif; // compare ?>
              </div> <!-- tabs-id -->
            </li>
          </ul>
        </li>
        <li id="fields-email" class="fieldGroup">
          <?php
            if($this->Permission->selfService($permissions, $e, 'EmailAddress') == PermissionEnum::ReadWrite) {
              print '<div class="coAddEditButtons">';
              $linktarget = array(
                'controller' => 'email_addresses',
                'action'     => 'add',
                'copersonid' => $co_people[0]['CoPerson']['id'],
                'co'         => $cur_co['Co']['id']
              );
              $linkparams = array('class'  => 'addbutton');
              
              print $this->Html->link(_txt('op.add'),
                $linktarget,
                $linkparams);
              print '</div>';
            }
          ?>
          <a href="#tabs-email" class="fieldGroupName">
            <span class="ui-icon ui-icon-circlesmall-minus"></span>
            <?php print _txt('fd.email_address.mail'); ?>
          </a>
          <ul class="fields">
            <li>
              <div id="tabs-email">
                <?php print '<div';
                if($this->action != 'compare')
                  print ' class="additionalinfo"';
                print '>';
                ?>
                <table>
                  <tbody>
                  <?php if($this->action == "compare"): ?>
                    <tr>
                      <th class="ui-widget-header"><?php print filter_var($cur_co['Co']['name'],FILTER_SANITIZE_SPECIAL_CHARS); ?></th>
                      <?php if($e && !$es): ?>
                        <th class="ui-widget-header"><?php print _txt('fd.actions'); ?></th>
                      <?php endif; ?>
                    </tr>
                  <?php endif; ?>
                  <?php
                  $l = 1;
                  
                  if(isset($co_people[0]['EmailAddress'])) {
                    foreach($co_people[0]['EmailAddress'] as $ea) {
                      // Determine the permission for this attribute
                      
                      $perm = $this->Permission->selfService($permissions,
                                                                       $e,
                                                                       'EmailAddress',
                                                                       (!empty($ea['type']) ? $ea['type'] : null));
                      
                      if($perm == PermissionEnum::ReadWrite) {
                        print '<div>';
                        print '<div>';
                        print $this->Html->link($ea['mail'], array('controller' => 'email_addresses', 'action' => 'edit', $ea['id'], 'co' => $cur_co['Co']['id']));
                        print " &nbsp;(" . $vv_cop_emailaddress_types[ $ea['type'] ] . ", "
                          . ($ea['verified'] ? _txt('fd.email_address.verified') : _txt('fd.email_address.unverified')) . ")<br />\n";
                        print '</div>';
                        print '<div>';
                        print '<a class="deletebutton" title="' . _txt('op.delete')
                          . '" onclick="javascript:js_confirm_generic(\''
                          . _txt('js.remove') . '\',\''    // dialog body text
                          . $this->Html->url(              // dialog confirm URL
                            array(
                              'controller' => 'email_addresses',
                              'action' => 'delete', $ea['id'],
                              'co' => $cur_co['Co']['id']
                            )
                          ) . '\',\''
                          . _txt('op.remove') . '\',\''    // dialog confirm button
                          . _txt('op.cancel') . '\',\''    // dialog cancel button
                          . _txt('op.remove') . '\',[\''   // dialog title
                          . filter_var(_jtxt($ea['mail']),FILTER_SANITIZE_STRING)  // dialog body text replacement strings
                          . '\']);">'
                          . _txt('op.delete')
                          . '</a>';
                        print $this->Html->link(_txt('op.edit'),
                            array('controller' => 'email_addresses', 'action' => 'edit', $ea['id'], 'co' => $cur_co['Co']['id']),
                            array('class' => 'editbutton')) . "\n";
                        print '</div>';
                        print '</div>';
                      } elseif($perm == PermissionEnum::ReadOnly) {
                        print '<tr class="line';
                        print ($l % 2);
                        print '">';
                        $l++;
                        print '<td>';
                        print filter_var($ea['mail'],FILTER_SANITIZE_SPECIAL_CHARS) . " (" . $vv_cop_emailaddress_types[ $ea['type'] ] . ")\n";
                        print '</td>';
                        print '</tr>';
                      }
                    }
                  }
                  ?>
                  </tbody>
                </table>
              </div>
              <?php
              if($this->action == "compare"):
                $l = 1;
                ?>
                <div>
                  <table>
                    <tbody>
                    <tr>
                      <th class="ui-widget-header"><?php print (!empty($org_identities[0]['OrgIdentity']['o']) ? filter_var($org_identities[0]['OrgIdentity']['o'],FILTER_SANITIZE_SPECIAL_CHARS) : _txt('fd.o')); ?></th>
                    </tr>
                    <?php
                    if(isset($org_identities[0]['EmailAddress']))
                    {
                      foreach($org_identities[0]['EmailAddress'] as $ea)
                      {
                        print '<tr class="line';
                        print ($l % 2);
                        print '">';
                        $l++;
                        print '<td>';
                        print filter_var($ea['mail'],FILTER_SANITIZE_SPECIAL_CHARS) . " (" . _txt('en.email_address.type', null, $ea['type']) . ")\n";
                        print '</td>';
                        print '</tr>';

                      }
                    }
                    ?>
                    </tbody>
                  </table>
                </div>
              <?php endif; // compare ?>
              </div> <!-- tabs-email -->
            </li>
          </ul>
        </li>
        <li id="fields-group" class="fieldGroup">
          <?php
          if($e) {
            print '<div class="coAddEditButtons">';
            $linktarget = array(
              'controller' => 'co_groups',
              'action'     => 'select',
              'copersonid' => $co_people[0]['CoPerson']['id']
            );
            $linkparams = array('class' => 'addbutton');
            print $this->Html->link(_txt('op.manage.grm'),
                $linktarget,
                $linkparams) . "\n";
            print '</div>';
          }
          ?>
          <a href="#tabs-group" class="fieldGroupName">
            <span class="ui-icon ui-icon-circlesmall-minus"></span> 
            <?php print _txt('fd.groups'); ?>
          </a>
          <ul class="fields">
            <li>
              <div id="tabs-group">
                <div class="additionalinfo">
                  <table>
                    <?php if($this->action == "compare"): ?>
                      <tr>
                        <th class="ui-widget-header"><?php print filter_var($cur_co['Co']['name'],FILTER_SANITIZE_SPECIAL_CHARS); ?></th>
                        <?php if($e && !$es): ?>
                          <th class="ui-widget-header"><?php print _txt('fd.actions'); ?></th>
                        <?php endif; ?>
                      </tr>
                    <?php endif; ?>
                    <?php
                    if(isset($co_people[0]['CoGroupMember'])) {
	              foreach($co_people[0]['CoGroupMember'] as $g) {
                        $isMembersGroup = ($g['CoGroup']['name'] == 'members' || strncmp($g['CoGroup']['name'], 'members:', 8)== 0);
                      	if($e && !$es && !$isMembersGroup) {
                          if($g['member'] || $g['owner']) {
                            print '<div>';
                            print '<div>';
                            print $this->Html->link($g['CoGroup']['name'], array('controller' => 'co_groups', 'action' => 'edit', $g['co_group_id'], 'co' => $cur_co['Co']['id']));
                            print '</div>';
                            print '<div>';
                            // XXX we already checked for $permissions['edit'], but not ['delete']... should we?
                            print '<a class="deletebutton" title="' . _txt('op.delete')
                              . '" onclick="javascript:js_confirm_generic(\''
                              . _txt('js.remove.member') . '\',\''    // dialog body text
                              . $this->Html->url(                     // dialog confirm URL
                                array(
                                  'controller' => 'co_group_members',
                                  'action' => 'delete', $g['id'],
                                  'copersonid' => $co_people[0]['CoPerson']['id'],
                                  'return' => 'person'
                                )
                              ) . '\',\''
                              . _txt('op.remove') . '\',\''    // dialog confirm button
                              . _txt('op.cancel') . '\',\''    // dialog cancel button
                              . _txt('op.remove') . '\',[\''   // dialog title
                              . filter_var(_jtxt($g['CoGroup']['name']),FILTER_SANITIZE_STRING)  // dialog body text replacement strings
                              . '\']);">'
                              . _txt('op.delete')
                              . '</a>';
                            print '</div>';
                            print '</div>';
                          }
                      	} else {
                          print '<tr class="line';
                          print ($l % 2);
                          print '">';
                          $l++;
                          print '<td>';
                          if($g['member'])
                            print filter_var($g['CoGroup']['name'],FILTER_SANITIZE_SPECIAL_CHARS) . "<br />\n";
                          if($g['owner'])
                            print filter_var($g['CoGroup']['name'],FILTER_SANITIZE_SPECIAL_CHARS) . " (" . _txt('fd.group.own') . ")<br />\n";
                          print '</td>';
                          print '</tr>';
                      	}      
	              }
                    }
                    ?>
                  </table>
                </div>
              </div> <!-- tabs-group -->
            </li>
          </ul>
        </li>
        <li id="fields-coperson" class="fieldGroup">
          <?php
            print $this->Form->end();
            // Restart the form since the Form elements emitted above for add/invite cause blackholes for edit
            print $this->Form->create('CoPerson', array('action'=>'edit'));
            print $this->Form->hidden('CoPerson.co_id', array('default' => $co_people[0]['CoPerson']['co_id'])). "\n";
          ?>
          <a href="#tabs-coperson" class="fieldGroupName">
            <span class="ui-icon ui-icon-circlesmall-minus"></span>
            <?php print _txt('fd.attrs.cop'); ?>
          </a>
          <ul class="fields">
            <li>
              <div id="tabs-coperson">
                <?php print '<div class="additionalinfo">'; ?>
                <table>
                  <tbody>
                    <tr class="line1">
                      <th class="ui-widget-header">
                        <?php print _txt('fd.status'); ?>
                      </th>
                      <td>
                        <?php
                          if($e && $permissions['edit']
                             && !$permissions['editself']) {
                            global $cm_lang, $cm_texts;
                            
                            $attrs = array();
                            $attrs['value'] = $co_people[0]['CoPerson']['status'];
                            $attrs['empty'] = false;
                            
                            print $this->Form->select('CoPerson.status',
                                                      $cm_texts[ $cm_lang ]['en.status'],
                                                      $attrs);
                            
                            if($this->Form->isFieldError('CoPerson.status')) {
                              print $this->Form->error('CoPerson.status');
                            }
                          } else {
                            if(!empty($co_people[0]['CoPerson']['status'])) {
                              print _txt('en.status', null, $co_people[0]['CoPerson']['status']);
                              
                              if($e) {
                                // Self service... we need to include current status so the form saves
                                print $this->Form->hidden('CoPerson.status');
                              }
                            }
                          }
                        ?>
                        <?php if($e && $permissions['edit']
                                 && !$permissions['editself']
                                 &&
                                 ($co_people[0]['CoPerson']['status'] == StatusEnum::PendingApproval
                                  || $co_people[0]['CoPerson']['status'] == StatusEnum::PendingConfirmation)): ?>
                        <div>
                          <span class="ui-icon ui-icon-info co-info"></span>
                          <em><?php print _txt('fd.status.change'); ?></em>
                        </div>
                        <?php endif; ?>
                      </td>
                    </tr>
                    <tr class="line2">
                      <th class="ui-widget-header">
                        <?php print _txt('fd.timezone'); ?>
                      </th>
                      <td>
                        <?php
                          if($e && ($permissions['edit'] || $permissions['editself'])) {
                            $attrs = array();
                            $attrs['value'] = $co_people[0]['CoPerson']['timezone'];
                            $attrs['empty'] = true;
                            
                            print $this->Form->select('CoPerson.timezone',
                                                      // We use array_combine to force Cake to store
                                                      // the string (eg: Europe/Amsterndam) and not the
                                                      // index (eg: 310)
                                                      array_combine(timezone_identifiers_list(),
                                                                    timezone_identifiers_list()),
                                                      $attrs);
                            
                            if($this->Form->isFieldError('CoPerson.timezone')) {
                              print $this->Form->error('CoPerson.timezone');
                            }
                          } else {
                            if(!empty($co_people[0]['CoPerson']['timezone'])) {
                              print $co_people[0]['CoPerson']['timezone'];
                            }
                          }
                        ?>
                        <?php if($e &&
                                 ($permissions['editself']
                                  // Special check for admins, who aren't editself
                                  || $this->Session->read('Auth.User.co_person_id') == $this->request->params['pass'][0])): ?>
                        <div>
                          <span class="ui-icon ui-icon-info co-info"></span>
                          <em><?php print _txt('fd.timezone.change'); ?></em>
                        </div>
                        <?php endif; ?>
                      </td>
                    </tr>
                    <?php if($e && ($permissions['edit'] || $permissions['editself'])): ?>
                    <tr class="line1">
                      <td></td>
                      <td>
                        <?php
                          print $this->Form->submit($submit_label);
                          print $this->Form->button(_txt('op.reset'),
                                                    array('type'=>'reset'));
                        ?>
                      </td>
                    </tr>
                    <?php endif; // edit ?>
                  </tbody>
                </table>
              </div>
              </div> <!-- tabs-coperson -->
            </li>
          </ul>
        </li>
        <li id="fields-role" class="fieldGroup">
          <?php
            if($this->action != "compare" && $e && !$es) {
              print '<div class="coAddEditButtons">';
              $linktarget = array('controller' => 'co_person_roles',
                'action'     => 'add',
                'copersonid' => $co_people[0]['CoPerson']['id'],
                'co'         => $cur_co['Co']['id']
              );
              $linkparams = array('class'  => 'addbutton');

              print $this->Html->link(_txt('op.add'),
                  $linktarget,
                  $linkparams) . "\n";
              print '</div>';
            }
          ?>
          <a href="#tabs-role" class="fieldGroupName">
            <span class="ui-icon ui-icon-circlesmall-minus"></span> 
            <?php print _txt('fd.attrs.copr'); ?>
          </a>
          <ul class="fields">
            <li>
              <div id="tabs-role">
                <?php if($this->action != "invite"): ?>
                  <!-- Person Role Data -->
                  <table id="<?php print $this->action; ?>_co_person_roles" class="ui-widget">
                    <tbody>
                    <tr class="line<?php print ($l % 2); $l++; ?>">
                      <?php if($this->action == "compare"): ?>
                        <th class="ui-widget-header"><?php print _txt('fd.o'); ?></th>
                        <th class="ui-widget-header"><?php print _txt('fd.ou'); ?></th>
                      <?php else: // compare ?>
                        <th class="ui-widget-header"><?php print _txt('fd.cou'); ?></th>
                      <?php endif; // compare ?>
                      <th class="ui-widget-header"><?php print _txt('fd.title'); ?></th>
                      <th class="ui-widget-header"><?php print _txt('fd.affiliation'); ?></th>
                      <th class="ui-widget-header"><?php print _txt('fd.valid_from'); ?></th>
                      <th class="ui-widget-header"><?php print _txt('fd.valid_through'); ?></th>
                      <?php if($this->action != "compare"): ?>
                        <th class="ui-widget-header"><?php print _txt('fd.status'); ?></th>
                        <th class="ui-widget-header"><?php print _txt('fd.actions'); ?></th>
                      <?php endif; // compare ?>
                    </tr>
                    <?php if($this->action == "compare"): ?>
                      <tr class="line<?php print ($l % 2); $l++; ?>">
                        <td>
                          <?php
                          if(isset($org_identities[0]['OrgIdentity']['o']))
                            print filter_var($org_identities[0]['OrgIdentity']['o'],FILTER_SANITIZE_SPECIAL_CHARS);
                          ?>
                        </td>
                        <td>
                          <?php
                          if(isset($org_identities[0]['OrgIdentity']['ou']))
                            print filter_var($org_identities[0]['OrgIdentity']['ou'],FILTER_SANITIZE_SPECIAL_CHARS);
                          ?>
                        </td>
                        <td>
                          <?php
                          if(isset($org_identities[0]['OrgIdentity']['title']))
                            print filter_var($org_identities[0]['OrgIdentity']['title'],FILTER_SANITIZE_SPECIAL_CHARS);
                          ?>
                        </td>
                        <td>
                          <?php
                          if(isset($org_identities[0]['OrgIdentity']['affiliation']))
                            print $cm_texts[ $cm_lang ]['en.org_identity.affiliation'][ $org_identities[0]['OrgIdentity']['affiliation'] ];
                          ?>
                        </td>
                      </tr>
                    <?php endif; // compare ?>
                    <?php
                    $rcnt = 1;
                    foreach($co_people[0]['CoPersonRole'] as $r):
                      ?>
                      <tr class="line<?php print ($l % 2); $l++; ?>">
                        <?php if($this->action == "compare"): ?>
                          <td><?php if(isset($r['o'])) print filter_var($r['o'],FILTER_SANITIZE_SPECIAL_CHARS); ?></td>
                          <td><?php if(isset($r['ou'])) print filter_var($r['ou'],FILTER_SANITIZE_SPECIAL_CHARS); ?></td>
                        <?php else: // compare ?>
                          <td><?php if(isset($r['Cou']['name'])) print filter_var($r['Cou']['name'],FILTER_SANITIZE_SPECIAL_CHARS); ?></td>
                        <?php endif; // compare ?>
                        <td><?php if(isset($r['title'])) print filter_var($r['title'],FILTER_SANITIZE_SPECIAL_CHARS); ?></td>
                        <td><?php if(isset($r['affiliation'])) print $vv_copr_affiliation_types[ $r['affiliation'] ]; ?></td>
                        <td><?php if(isset($r['valid_from']) && $r['valid_from'] > 0) print $this->Time->format('Y M d', $r['valid_from']); ?></td>
                        <td><?php if(isset($r['valid_through']) && $r['valid_through'] > 0) print $this->Time->format('Y M d', $r['valid_through']); ?></td>
                        <?php if($this->action != "compare"): ?>
                          <td><?php if(isset($r['status'])) print _txt('en.status', null, $r['status']); ?></td>
                          <td>
                            <?php
                            if($es // Editing self
                              || empty($r['Cou']) // No COU set for this person
                              || (isset($r['Cou']['name']) && in_array($r['Cou']['name'], $permissions['cous']))) // Admin for the COU
                            {
                              // COU Admins can only edit their own folks, so we need a bit of
                              // a machination to determine if they can edit these records
                              // along side other authorized folks.

                              // Currently, users can self-edit some role level attributes,
                              // so give them an edit button, too.

                              if($permissions['enroll']
                                && $r['status'] == StatusEnum::PendingApproval
                                && !empty($r['CoPetition'][0]['id'])) {
                                print $this->Html->link(_txt('op.petition'),
                                  array('controller' => 'co_petitions',
                                    'action' => 'view',
                                    $r['CoPetition'][0]['id'],
                                    'co' => $r['CoPetition'][0]['co_id'],
                                    'coef' => $r['CoPetition'][0]['co_enrollment_flow_id']),
                                  array('class' => 'petitionbutton'));
                              }

                              if($permissions['canvas']) {
                                print $this->Html->link(_txt('op.edit'),
                                    array('controller' => 'co_person_roles', 'action' => 'edit', $r['id']),
                                    array('class' => 'editbutton')) . "\n";
                              }

                              if($permissions['relink']) {
                                print '<a class="relinkbutton" title="' . _txt('op.relink') . '" onclick="javascript:js_confirm_generic(\'' . _jtxt(_txt('op.relink.role.confirm')) . '\', \'' . $this->Html->url(array('controller' => 'co_people', 'action' => 'relink', $co_people[0]['CoPerson']['id'], 'copersonroleid' => $r['id'])) . '\');">' . _txt('op.relink') . '</a>' . "\n";
                              }

                              if($permissions['delete']) {
                                print '<button type="button" class="deletebutton" title="' . _txt('op.delete')
                                  . '" onclick="javascript:js_confirm_generic(\''
                                  . _txt('js.remove') . '\',\''    // dialog body text
                                  . $this->Html->url(              // dialog confirm URL
                                    array(
                                      'controller' => 'co_person_roles',
                                      'action' => 'delete',
                                      $r['id']
                                    )
                                  ) . '\',\''
                                  . _txt('op.remove') . '\',\''    // dialog confirm button
                                  . _txt('op.cancel') . '\',\''    // dialog cancel button
                                  . _txt('op.remove') . '\',[\''   // dialog title
                                  . filter_var(_jtxt(generateCn($co_people[0]['PrimaryName'])),FILTER_SANITIZE_STRING)  // dialog body text replacement strings
                                  . '\']);">'
                                  . _txt('op.delete')
                                  . '</button>';
                              }
                            } elseif($permissions['view']) {
                              print $this->Html->link(_txt('op.view'),
                                  array('controller' => 'co_person_roles', 'action' => 'view', $r['id']),
                                  array('class' => 'viewbutton')) . "\n";
                            }
                            ?>
                          </td>
                        <?php endif; // compare ?>
                      </tr>
                      <?php
                        $rcnt++;
                        endforeach; // co_people
                      ?>
                    </tbody>
                  </table>
                <?php endif; // invite ?>
              </div> <!-- tabs-role -->
            </li>
          </ul>
        </li>
        <li id="fields-sshkey" class="fieldGroup">
          <?php
            if($e) {
              print '<div class="coAddEditButtons">';
              $linktarget = array(
                'controller' => 'ssh_keys',
                'action'     => 'add',
                'copersonid' => $co_people[0]['CoPerson']['id']
              );
              $linkparams = array('class'  => 'addbutton');
              
              print $this->Html->link(_txt('op.add'),
                                      $linktarget,
                                      $linkparams);
              print '</div>';
            }
          ?>
          <a href="#tabs-sshkeys" class="fieldGroupName">
            <span class="ui-icon ui-icon-circlesmall-minus"></span>
            <?php print _txt('ct.ssh_keys.pl'); ?>
          </a>
          <ul class="fields">
            <li>
              <div id="tabs-sshkeys">
                <?php print '<div class="additionalinfo">'; ?>
                <table>
                  <tbody>
                  <?php
                  $l = 1;
                  if($e)
                  {
                    if(isset($co_people[0]['SshKey'])) {
                      foreach($co_people[0]['SshKey'] as $sk) {
                        print '<div>';
                        print '<div>';
                        print $this->Html->link($sk['comment'], array('controller' => 'ssh_keys', 'action' => 'edit', $sk['id']));
                        print '</div>';
                        print '<div>';
                        // XXX we already checked for $permissions['edit'], but not ['delete']... should we?
                        print '<button type="button" class="deletebutton" title="' . _txt('op.delete')
                          . '" onclick="javascript:js_confirm_generic(\''
                          . _txt('js.remove') . '\',\''    // dialog body text
                          . $this->Html->url(              // dialog confirm URL
                            array(
                              'controller' => 'ssh_keys',
                              'action' => 'delete',
                              $sk['id']
                            )
                          ) . '\',\''
                          . _txt('op.remove') . '\',\''    // dialog confirm button
                          . _txt('op.cancel') . '\',\''    // dialog cancel button
                          . _txt('op.remove') . '\',[\''   // dialog title
                          . filter_var(_jtxt($sk['comment']),FILTER_SANITIZE_STRING)  // dialog body text replacement strings
                          . '\']);">'
                          . _txt('op.delete')
                          . '</button>';
                        print $this->Html->link(_txt('op.edit'),
                            array('controller' => 'ssh_keys', 'action' => 'edit', $sk['id']),
                            array('class' => 'editbutton')) . "\n";
                        print '</div>';
                        print '</div>';
                      }
                    }
                  } else {
                    if(isset($co_people[0]['SshKey'])) {
                      foreach($co_people[0]['SshKey'] as $sk) {
                        print '<tr class="line';
                        print ($l % 2);
                        print '">';
                        $l++;
                        
                        print '<td>';
                        print filter_var($sk['comment'],FILTER_SANITIZE_SPECIAL_CHARS) . "\n";
                        print '</td>';
                        print '</tr>';
                      }
                    }
                  }
                  ?>
                  </tbody>
                </table>
              </div>
              </div> <!-- tabs-sshkey -->
            </li>
          </ul>
        </li>
        <li id="fields-orgid" class="fieldGroup">
          <?php
            if(isset($permissions['link']) && $permissions['link']) {
              print '<div class="coAddEditButtons">';
              $linktarget = array(
                'controller' => 'org_identities',
                'action'     => 'find',
                'copersonid' => $co_people[0]['CoPerson']['id']
              );
              $linkparams = array('class' => 'addbutton');
              
              print $this->Html->link(_txt('op.link'),
                                      $linktarget,
                                      $linkparams);
              print '</div>';
            }
          ?>
          <a href="#tabs-orgid" class="fieldGroupName">
            <span class="ui-icon ui-icon-circlesmall-minus"></span>
            <?php print _txt('ct.org_identities.pl'); ?>
          </a>
          <ul class="fields">
            <li>
              <div id="tabs-orgid">

                <!-- Org Identity Data -->
                <table id="<?php print $this->action; ?>_org_identities" class="ui-widget">
                  <tbody>
                  <tr class="line<?php print ($l % 2); $l++; ?>">
                    <th class="ui-widget-header"><?php print _txt('fd.name'); ?></th>
                    <th class="ui-widget-header"><?php print _txt('fd.o'); ?></th>
                    <th class="ui-widget-header"><?php print _txt('fd.affiliation'); ?></th>
                    <th class="ui-widget-header"><?php print _txt('fd.identifier.ids.login'); ?></th>
                    <th class="ui-widget-header"><?php print _txt('fd.actions'); ?></th>
                  </tr>
                  <?php if(!empty($co_people[0]['CoOrgIdentityLink'])): ?>
                  <?php foreach($co_people[0]['CoOrgIdentityLink'] as $link): ?>
                    <tr class="line<?php print ($l % 2); $l++; ?>">
                      <td>
                        <?php
                          if(!empty($link['OrgIdentity']['PrimaryName'])) {
                            print filter_var(generateCn($link['OrgIdentity']['PrimaryName']),FILTER_SANITIZE_SPECIAL_CHARS);
                          }

                          print " (" . filter_var($link['OrgIdentity']['id'],FILTER_SANITIZE_SPECIAL_CHARS) . ")";
                        ?>
                      </td>
                      <td>
                        <?php
                        if(!empty($link['OrgIdentity']['o']))
                          print filter_var($link['OrgIdentity']['o'],FILTER_SANITIZE_SPECIAL_CHARS);
                        ?>
                      </td>
                      <td>
                        <?php
                        if(!empty($link['OrgIdentity']['affiliation']))
                          print filter_var($cm_texts[ $cm_lang ]['en.org_identity.affiliation'][ $link['OrgIdentity']['affiliation'] ],FILTER_SANITIZE_SPECIAL_CHARS);
                        ?>
                      </td>
                      <td>
                        <?php
                        if(!empty($link['OrgIdentity']['Identifier'])) {
                          foreach($link['OrgIdentity']['Identifier'] as $id) {
                            if(!empty($id['identifier'])
                               && $id['login']
                               && $id['status'] == StatusEnum::Active) {
                              print filter_var($id['identifier'],FILTER_SANITIZE_SPECIAL_CHARS)
                                    . " (" . filter_var($id['type'],FILTER_SANITIZE_SPECIAL_CHARS) . ")<br />";
                            }
                          }
                        }
                        ?>
                      </td>
                      <td>
                        <?php
                        print $this->Html->link(_txt($e && !$es ? 'op.edit' : 'op.view'),
                            array('controller' => 'org_identities',
                              'action' => ($e && !$es ? 'edit' : 'view'),
                              $link['OrgIdentity']['id'],
                              'co' => ($pool_org_identities ? false : $cur_co['Co']['id'])),
                            array('class' => ($e && !$es ? 'editbutton' : 'viewbutton'))) . "\n";

                        if($permissions['relink']) {
                          print '<a class="relinkbutton" title="' . _txt('op.relink') . '" onclick="javascript:js_confirm_generic(\'' . _jtxt(_txt('op.relink.confirm')) . '\', \'' . $this->Html->url(array('controller' => 'co_people', 'action' => 'relink', $co_people[0]['CoPerson']['id'], 'linkid' => $link['id'])) . '\');">' . _txt('op.relink') . '</a>' . "\n";
                        }

                        if($permissions['delete']
                          && count($co_people[0]['CoOrgIdentityLink']) > 1) {
                          // An Org Identity Link can only be removed if there is at least one other remaining
                          // XXX Is this still a valid restriction? As of 0.9.1 one can relink an org identity
                          // away, even if it's the last one attached to the CO Preson.

                          print '<a class="unlinkbutton" title="' . _txt('op.unlink') . '" onclick="javascript:js_confirm_generic(\'' . _jtxt(_txt('op.unlink.confirm')) . '\', \'' . $this->Html->url(array('controller' => 'co_org_identity_links', 'action' => 'delete', $link['id'])) . '\');">' . _txt('op.unlink') . '</a>' . "\n";
                        }
                        ?>
                      </td>
                    </tr>
                  <?php endforeach; ?>
                  <?php endif; ?>
                  </tbody>
                </table>
              </div> <!-- tabs-orgid -->
            </li>
          </ul>
        </li>
      <?php endif; ?>
    </ul>
  </div>
</div>

<div id="autogenerate-dialog" title="<?php print _txt('op.id.auto'); ?>">
  <?php print _txt('op.id.auto.confirm'); ?>
</div>

<?php
  print $this->element("changelog");
