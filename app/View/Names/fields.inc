<?php
/**
 * COmanage Registry Names Fields
 *
 * Copyright (C) 2013-15 University Corporation for Advanced Internet Development, Inc.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 *
 * @copyright     Copyright (C) 2013-15 University Corporation for Advanced Internet Development, Inc.
 * @link          http://www.internet2.edu/comanage COmanage Project
 * @package       registry
 * @since         COmanage Registry v0.8.3
 * @license       Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)
 * @version       $Id$
 */

  // Determine if fields are editable
  $e = false;
  
  if(($this->action == "add" && $permissions['add']) || ($this->action == "edit" && $permissions['edit']))
    $e = true;
    
  // We shouldn't get here if we don't have at least read permission, but check just in case
  
  if(!$e && !$permissions['view'])
    return(false);

  $idForBreadcrumbs = '';

  // Migrate the target person from a named argument to a form field
  if(isset($this->request->params['named']['copersonid'])) {
    print $this->Form->hidden('co_person_id', array('default' => filter_var($this->request->params['named']['copersonid'],FILTER_SANITIZE_SPECIAL_CHARS))) . "\n";
    $idForBreadcrumbs = filter_var($this->request->params['named']['copersonid'],FILTER_SANITIZE_SPECIAL_CHARS);
  } elseif(isset($this->request->data['Name']['co_person_id'])) {
    print $this->Form->hidden('co_person_id', array('default' => filter_var($this->request->data['Name']['co_person_id'],FILTER_SANITIZE_SPECIAL_CHARS))) . "\n";
    $idForBreadcrumbs = filter_var($this->request->data['Name']['co_person_id'],FILTER_SANITIZE_SPECIAL_CHARS);
  } elseif(isset($this->request->params['named']['orgidentityid'])) {
    print $this->Form->hidden('org_identity_id', array('default' => filter_var($this->request->params['named']['orgidentityid'],FILTER_SANITIZE_SPECIAL_CHARS))) . "\n";
    $idForBreadcrumbs = filter_var($this->request->params['named']['orgidentityid'],FILTER_SANITIZE_SPECIAL_CHARS);
  } elseif(isset($this->request->data['Name']['org_identity_id'])) {
    print $this->Form->hidden('org_identity_id', array('default' => filter_var($this->request->data['Name']['org_identity_id'],FILTER_SANITIZE_SPECIAL_CHARS))) . "\n";
    $idForBreadcrumbs = filter_var($this->request->data['Name']['org_identity_id'],FILTER_SANITIZE_SPECIAL_CHARS);
  }

  if(isset($cur_co))
    print $this->Form->hidden('co_id', array('default' => $cur_co['Co']['id'])) . "\n";

  // Add breadcrumbs
  print $this->element("coCrumb");
  if(isset($this->request->params['named']['copersonid']) || isset($this->request->data['Name']['co_person_id'])) {
    // CO Person History
    $args = array();
    $args['plugin'] = null;
    $args['controller'] = 'co_people';
    $args['action'] = 'index';
    $args['co'] = $cur_co['Co']['id'];
    $this->Html->addCrumb(_txt('me.population'), $args);

    $args = array(
      'controller' => 'co_people',
      'action' => 'canvas',
      $idForBreadcrumbs);
    $this->Html->addCrumb(_txt('ct.co_people.1'), $args);

  } elseif(isset($this->request->params['named']['orgidentityid']) || isset($this->request->data['Name']['org_identity_id'])) {
    // Org ID History
    $args = array();
    $args['plugin'] = null;
    $args['controller'] = 'org_identities';
    $args['action'] = 'index';
    if(!$pool_org_identities) {
      $args['co'] = $cur_co['Co']['id'];
    }
    $this->Html->addCrumb(_txt('ct.org_identities.pl'), $args);

    $args = array(
      'controller' => 'orgIdentities',
      'action' => 'edit',
      $idForBreadcrumbs);
    $this->Html->addCrumb(_txt('ct.org_identities.1'), $args);

  }
  $crumbTxt = _txt('op.' . $this->action . '-a', array(_txt('fd.name')));
  $this->Html->addCrumb($crumbTxt);

?>
<table id="<?php print $this->action; ?>_name" class="ui-widget">
  <tbody>
    <?php $l = 1; ?>
    <?php if(in_array('honorific', $vv_permitted_fields)): ?>
    <tr class="line<?php print ($l % 2); $l++; ?>">
      <td>
        <?php
        print _txt('fd.name.honorific');
        
        if($e)
          print " " . _txt('fd.name.h.desc');
        ?>
      </td>
      <td>
        <?php
          // Carry the current status of primary_name, but to change it requires a different operation
          print $this->Form->hidden('Name.primary_name');
          print ($e ? $this->Form->input('Name.honorific') : filter_var($names[0]['Name']['honorific'],FILTER_SANITIZE_SPECIAL_CHARS));
        ?>
       </td>
    </tr>
    <?php endif; // permitted fields ?>
    <?php if(in_array('given', $vv_permitted_fields)): ?>
    <tr class="line<?php print ($l % 2); $l++; ?>">
      <td>
        <?php print _txt('fd.name.given'); ?>
        <?php if(in_array('given', $vv_required_fields)): ?>
        <span class="required">*</span>
        <?php endif; // required_fields ?>
      </td>
      <td>
        <?php print ($e ? $this->Form->input('Name.given', array('class' => 'focusFirst')) : filter_var($names[0]['Name']['given'],FILTER_SANITIZE_SPECIAL_CHARS)); ?>
      </td>
    </tr>
    <?php endif; // permitted fields ?>
    <?php if(in_array('middle', $vv_permitted_fields)): ?>
    <tr class="line<?php print ($l % 2); $l++; ?>">
      <td>
        <?php print _txt('fd.name.middle'); ?>
        <?php if(in_array('middle', $vv_required_fields)): ?>
        <span class="required">*</span>
        <?php endif; // required_fields ?>
      </td>
      <td>
        <?php print ($e ? $this->Form->input('Name.middle') : filter_var($names[0]['Name']['middle'],FILTER_SANITIZE_SPECIAL_CHARS)); ?>
      </td>
    </tr>
    <?php endif; // permitted fields ?>
    <?php if(in_array('family', $vv_permitted_fields)): ?>
    <tr class="line<?php print ($l % 2); $l++; ?>">
      <td>
        <?php print _txt('fd.name.family'); ?>
        <?php if(in_array('family', $vv_required_fields)): ?>
        <span class="required">*</span>
        <?php endif; // required_fields ?>
      </td>
      <td>
        <?php print ($e ? $this->Form->input('Name.family') : filter_var($names[0]['Name']['family'],FILTER_SANITIZE_SPECIAL_CHARS)); ?>
      </td>
    </tr>
    <?php endif; // permitted fields ?>
    <?php if(in_array('suffix', $vv_permitted_fields)): ?>
    <tr class="line<?php print ($l % 2); $l++; ?>">
      <td>
        <?php
          print _txt('fd.name.suffix');
          
          if($e)
            print " " . _txt('fd.name.s.desc');
        ?>
      </td>
      <td>
        <?php print ($e ? $this->Form->input('Name.suffix') : filter_var($names[0]['Name']['suffix'],FILTER_SANITIZE_SPECIAL_CHARS)); ?>
      </td>
    </tr>
    <?php endif; // permitted fields ?>
    <tr class="line<?php print ($l % 2); $l++; ?>">
      <td>
        <?php print _txt('fd.type'); ?>
      </td>
      <td>
        <?php
          $attrs = array();
          $attrs['value'] = (isset($names[0]['Name']['type'])
                             ? $names[0]['Name']['type']
                             : NameEnum::Alternate);
          $attrs['empty'] = false;
          
          if($e) {
            print $this->Form->select('Name.type',
                                      $vv_available_types,
                                      $attrs);
            
            if($this->Form->isFieldError('Name.type')) {
              print $this->Form->error('Name.type');
            }
          } else {
            print $vv_available_types[ $names[0]['Name']['type'] ];
          }
        ?>
      </td>
    </tr>
    <tr class="line<?php print ($l % 2); $l++; ?>">
      <td>
        <?php print _txt('fd.language'); ?>
      </td>
      <td>
        <?php
          global $cm_lang, $cm_texts;
          
          $attrs = array();
          $attrs['value'] = (isset($names[0]['Name']['language'])
                             ? $names[0]['Name']['language']
                             : getPreferredLanguage());
          $attrs['empty'] = true;
          
          if($e) {
            print $this->Form->select('Name.language',
                                      $cm_texts[ $cm_lang ]['en.language'],
                                      $attrs);
            
            if($this->Form->isFieldError('Name.language')) {
              print $this->Form->error('Name.language');
            }
          } else {
            if(!empty($names[0]['Name']['language'])) {
              print _txt('en.language', null, $names[0]['Name']['language']);
            }
          }
        ?>
      </td>
    </tr>
    <tr>
      <td>
        <em><span class="required"><?php print _txt('fd.req'); ?></span></em><br />
      </td>
      <td>
        <?php
          if($e) {
            print $this->Form->submit($submit_label);
            print $this->Form->button(_txt('op.reset'), 
                                      array('type'=>'reset'));
          }
        ?>
      </td>
    </tr>
  </tbody>
</table>
<?php
  print $this->element("changelog");
